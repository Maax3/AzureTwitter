{
	"name": "main_process",
	"properties": {
		"activities": [
			{
				"name": "Procesamiento de datos",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.file_name_origin",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "databricks-process",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "dataflow_process",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/dimacontacto94@gmail.com/Analisis-Sentimientos-LLM",
								"baseParameters": {
									"file_name_origin": {
										"value": "@item()",
										"type": "Expression"
									},
									"save_route_databricks": {
										"value": "@split(item(), '.')[0]",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "dataflow_process",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "dataflow_process",
									"type": "DataFlowReference",
									"parameters": {
										"nombre_fichero": {
											"value": "'@{item()}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"origindata": {
											"file_name_origin": {
												"value": "@item()",
												"type": "Expression"
											}
										},
										"newdata": {
											"file_name_themes": {
												"value": "@pipeline().parameters.file_name_themes",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "Copy data to SQL",
							"description": "Crea una tabla en una BDD por cada empresa.",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "IF TABLE EXISTS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate"
								},
								"enableStaging": false,
								"validateDataConsistency": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "primaryID",
												"type": "int",
												"physicalType": "int"
											},
											"sink": {
												"name": "primaryID",
												"type": "int",
												"physicalType": "int"
											}
										},
										{
											"source": {
												"name": "user_id",
												"type": "long",
												"physicalType": "long"
											},
											"sink": {
												"name": "user_id",
												"type": "bigint",
												"physicalType": "bigint"
											}
										},
										{
											"source": {
												"name": "username",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "username",
												"type": "String",
												"physicalType": "nvarchar"
											}
										},
										{
											"source": {
												"name": "tweet_id",
												"type": "long",
												"physicalType": "long"
											},
											"sink": {
												"name": "tweet_id",
												"type": "bigint",
												"physicalType": "bigint"
											}
										},
										{
											"source": {
												"name": "retweet_count",
												"type": "int",
												"physicalType": "int"
											},
											"sink": {
												"name": "retweet_count",
												"type": "int",
												"physicalType": "int"
											}
										},
										{
											"source": {
												"name": "likes",
												"type": "int",
												"physicalType": "int"
											},
											"sink": {
												"name": "likes",
												"type": "int",
												"physicalType": "int"
											}
										},
										{
											"source": {
												"name": "view_count",
												"type": "float",
												"physicalType": "float"
											},
											"sink": {
												"name": "view_count",
												"type": "float",
												"physicalType": "float"
											}
										},
										{
											"source": {
												"name": "hashtags",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "hashtags",
												"type": "String",
												"physicalType": "nvarchar"
											}
										},
										{
											"source": {
												"name": "location",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "location",
												"type": "String",
												"physicalType": "nvarchar"
											}
										},
										{
											"source": {
												"name": "latitud",
												"type": "float",
												"physicalType": "float"
											},
											"sink": {
												"name": "latitud",
												"type": "float",
												"physicalType": "float"
											}
										},
										{
											"source": {
												"name": "longitud",
												"type": "float",
												"physicalType": "float"
											},
											"sink": {
												"name": "longitud",
												"type": "float",
												"physicalType": "float"
											}
										},
										{
											"source": {
												"name": "temas",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "temas",
												"type": "String",
												"physicalType": "nvarchar"
											}
										},
										{
											"source": {
												"name": "text",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "text",
												"type": "String",
												"physicalType": "nvarchar"
											}
										},
										{
											"source": {
												"name": "URL",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "URL",
												"type": "String",
												"physicalType": "nvarchar"
											}
										},
										{
											"source": {
												"name": "sentiment_result",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "sentiment_result",
												"type": "String",
												"physicalType": "nvarchar"
											}
										},
										{
											"source": {
												"name": "sentiment_score",
												"type": "float",
												"physicalType": "float"
											},
											"sink": {
												"name": "sentiment_score",
												"type": "float",
												"physicalType": "float"
											}
										},
										{
											"source": {
												"name": "created_at",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "created_at",
												"type": "String",
												"physicalType": "nvarchar"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_csv_to_sql",
									"type": "DatasetReference",
									"parameters": {
										"file_name_origin": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_sql",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@split(item(), '.')[0]",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "ALTER TABLE",
							"description": "Modifica las columnas para establecer una clave primaria",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data to SQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[ModificarTabla]",
								"storedProcedureParameters": {
									"NombreTabla": {
										"value": {
											"value": "@split(item(), '.')[0]",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Check if table exists",
							"description": "Comprueba si la tabla de la base de datos existe. Si el valor devuelto por la 'búsqueda' es vacio la tabla no existe.",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "databricks-process",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_sql",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@split(item(), '.')[0]",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "IF TABLE EXISTS",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Check if table exists",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(empty(activity('Check if table exists').output))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "DROP TABLE",
										"description": "Borra los datos para evitar duplicidades",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[BorrarTabla]",
											"storedProcedureParameters": {
												"NombreTabla": {
													"value": {
														"value": "@split(item(), '.')[0]",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSqlDatabase1",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "mailSender",
				"description": "Envio de email en caso de error",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Procesamiento de datos",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-76.eastus.logic.azure.com:443/workflows/7e5550437b0a4ea0abd18b0fd490ff65/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=jo43f4nx-ZsY4fxZGaVJ7ffcTlKrD-b34zQ-A8-8qNA",
					"body": {
						"value": "{\n    \"message\": \"Ha ocurrido un error en la pipeline: \n        @{pipeline().Pipeline}. Value-ID: @{pipeline().RunId}.\n        Error value @{activity('databricks-process').output}. \n        Error completo: @{activity('databricks-process').output.pipelineReturnValue}\",\n    \"dataFactoryName\": \"Factoria: @{pipeline().DataFactory}\",\n    \"activityName\": \"Factoria: @{pipeline().DataFactory}\",\n    \"receiver\": \"Factoria: @{pipeline().parameters.email}\"\n\n    }",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"file_name_origin": {
				"type": "array",
				"defaultValue": [
					"hiberus.csv",
					"viewnext.csv",
					"minsait.csv",
					"nttdata-2020.csv"
				]
			},
			"file_name_themes": {
				"type": "array",
				"defaultValue": [
					"temasHiberus.csv",
					"temasVN.csv",
					"temasMinsait.csv",
					"temasNttdata.csv"
				]
			},
			"save_route_databricks": {
				"type": "string"
			},
			"email": {
				"type": "string",
				"defaultValue": "dmitry.poldenev@viewnext.com"
			}
		},
		"variables": {
			"asda": {
				"type": "Integer"
			}
		},
		"annotations": []
	}
}